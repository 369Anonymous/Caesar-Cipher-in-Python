def caesar_cipher(text, shift, mode):
    """
    Encrypts or decrypts text using the Caesar cipher algorithm.

    Args:
        text (str): The input string to be processed.
        shift (int): The number of positions to shift letters.
        mode (str): The operation to perform - 'encrypt' or 'decrypt'.

    Returns:
        str: The processed (encrypted or decrypted) string.
    """
    if not isinstance(shift, int):
        raise TypeError("Shift value must be an integer.")

    # Invert the shift for decryption
    if mode == 'decrypt':
        shift = -shift

    result = ""

    for char in text:
        if char.isalpha():  # Process only alphabetic characters
            # Determine the base ASCII value ('A' for uppercase, 'a' for lowercase)
            start = ord('A') if char.isupper() else ord('a')
            
            # Calculate the shifted position
            # 1. Get the character's position in the alphabet (0-25)
            # 2. Add the shift value
            # 3. Use the modulo operator (%) to wrap around the alphabet
            offset = (ord(char) - start + shift) % 26
            
            # Convert the new position back to a character
            result += chr(start + offset)
        else:
            # Keep non-alphabetic characters (spaces, punctuation, etc.) unchanged
            result += char
            
    return result

def main():
    """
    Main function to run the user interface for the Caesar Cipher program.
    """
    print("--- Caesar Cipher Program üóùÔ∏è ---")

    while True:
        # Get user's desired operation
        while True:
            choice = input("Do you want to (e)ncrypt or (d)ecrypt the message? ").lower()
            if choice in ['e', 'encrypt']:
                mode = 'encrypt'
                break
            elif choice in ['d', 'decrypt']:
                mode = 'decrypt'
                break
            else:
                print("Invalid input. Please enter 'e' or 'd'.")

        # Get user's message
        message = input(f"Enter the message to {mode}: ")
        
        # Get and validate the shift key
        while True:
            try:
                key = int(input("Enter the shift key (a number, e.g., 3): "))
                break  # Exit loop if input is a valid integer
            except ValueError:
                print("Invalid key. Please enter a whole number.")

        # Perform the cipher operation and print the result
        processed_message = caesar_cipher(text=message, shift=key, mode=mode)
        print("\n------------------------------------")
        print(f"Original message:  {message}")
        print(f"Processed message: {processed_message}")
        print("------------------------------------\n")

        # Ask if the user wants to go again
        another_go = input("Do you want to process another message? (yes/no): ").lower()
        if another_go not in ['y', 'yes']:
            print("Goodbye!")
            break

# This ensures the main() function runs only when the script is executed directly
if __name__ == "__main__":
    main()
    
    #run in terminal use command
    #py caesar_cipher.py
